Програма "Першокурсники".
(firstYearStudents)

Основні класи програми:

Student
Group
Professor
FirstYearStudentsRunner

Взаємозв'язки класів зображені на UML діаграмі.
************************************************************************************************************************

Клас Student
Метод getRating вичисляє рейтинг студента по принципу:
За основу береться середній бал шкільного атестату (academicPerformance),
до нього додається окремий бал за участь студента в позаурочній діяльності
університету (варіанти вказані в класі University Activities)

************************************************************************************************************************
Клас Group
Це масив з об'єктів Student.
Метод getGroupMonitor знаходить студента в групі з найвищим рейтингом.
Цей студент назначається старостою групи.
Метод filter класу Group використовує статичний метод класу Professor studentSearch
для фільтрування групи по заданому параметру.

************************************************************************************************************************
Клас Professor
Дисципліна, яку викладає професор, вказана в класі Discipline.
В поле groups додаємо групи, в яких професор викладає.
Метод checkingList вхідними даними приймає групу, а також список зі студентів, які присутні на парі.
Порівняння йде по id студента, ім'я студента в списку можна вказувати довільно. Якщо id списку і id студента співпадає,
в консоль виводиться повідомлення [ім'я студента] - present, інакше [ім'я студента] - absent.

Статичний метод studentSearch дозволяє проводити пошук студентів за заданими параметрами (ім'я, прізвище, рейтинг,
участь в діяльності університету, рік народження, id). Методи для пошуку винесені в окремий клас StudentPredicates.

************************************************************************************************************************
Клас FirstYearStudentsRunner

1.Створюемо студентів, дві групи, два професора.
2.Додаємо студенів в групи, додаємо групи професорам.
3.Обираємо старост груп, Виводимо їх в консоль.
4.Створюємо списки студентів, які присутні на парі. Студенти, відсутні на парі, закоментовані.
5.Виводимо в консоль списки присутніх.
6.Створюємо пошук студента в групі 101 за параметрами: Ім'я Anna, прізвище Vasilevska, виводимо результат в консоль.
7.Створюємо пошук студента в групі 101 з рейтингом вище 12. Виводимо результат в консоль.
************************************************************************************************************************